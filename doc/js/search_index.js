var search_data = {"index":{"searchIndex":["bond","bondcollection","formatter","linearinterpolator","spreadcalculator","<=>()","[]()","add()","calculate()","count()","each()","filter()","index()","new()","new()","parse()","prettify()","to_benchmark()","to_curve()","gemfile","gemfile.lock","readme","challenge1_sample.csv","challenge2_sample.csv","sample_input.csv","spread_to_benchmark.csv","spread_to_curve.csv"],"longSearchIndex":["bond","bondcollection","formatter","linearinterpolator","spreadcalculator","bond#<=>()","bondcollection#[]()","bondcollection#add()","linearinterpolator::calculate()","bondcollection#count()","bondcollection#each()","bondcollection#filter()","bondcollection#index()","bond::new()","bondcollection::new()","formatter::parse()","formatter::prettify()","spreadcalculator::to_benchmark()","spreadcalculator::to_curve()","","","","","","","",""],"info":[["Bond","","Bond.html","",""],["BondCollection","","BondCollection.html","","<p>An enumerable and immutable class for managing Bonds.\n"],["Formatter","","Formatter.html","",""],["LinearInterpolator","","LinearInterpolator.html","",""],["SpreadCalculator","","SpreadCalculator.html","","<p>A collection of spread calculation methods to compare corporate bonds and\ngovernment bonds.\n"],["<=>","Bond","Bond.html#method-i-3C-3D-3E","(other)","<p>Used to sort Bonds in a BondCollection by term.\n"],["[]","BondCollection","BondCollection.html#method-i-5B-5D","(index)","<p>Return a bond at the provided index.\n"],["add","BondCollection","BondCollection.html#method-i-add","(records)","<p>Creates a new BondCollection with the old records and new records in sorted\norder by term.\n<p>Attributes …\n"],["calculate","LinearInterpolator","LinearInterpolator.html#method-c-calculate","(x, point1, point2)","<p>Uses linear interpolation to calculate y for x when providing two\nsurrounding points. This only returns …\n"],["count","BondCollection","BondCollection.html#method-i-count","()","<p>Returns the number of bonds in a collection.\n"],["each","BondCollection","BondCollection.html#method-i-each","(&block)",""],["filter","BondCollection","BondCollection.html#method-i-filter","(attributes)","<p>Returns a new BondCollection matching the attributes specified in the\narguments.\n<p>Attributes\n<p><code>hash</code> - An individual …\n"],["index","BondCollection","BondCollection.html#method-i-index","(bond)","<p>Returns the index of a bond in a collection.\n"],["new","Bond","Bond.html#method-c-new","(attributes)",""],["new","BondCollection","BondCollection.html#method-c-new","(records = [])",""],["parse","Formatter","Formatter.html#method-c-parse","(hash)","<p>Accepts the standard format seen in a bond csv file and converts the\ncolumns into datatypes that can …\n"],["prettify","Formatter","Formatter.html#method-c-prettify","(hash, key)","<p>Converts the decimal percentage values calculated for spread_to_benchmark\nor spread_to_curve and converts …\n"],["to_benchmark","SpreadCalculator","SpreadCalculator.html#method-c-to_benchmark","(bond, bond_collection)","<p>Used to calculate the spread_to_benchmark between a bond and a collection\nof candidate bonds.\n<p>Attributes …\n"],["to_curve","SpreadCalculator","SpreadCalculator.html#method-c-to_curve","(bond, bond_collection)","<p>Used to calculate the spread_to_curve between a bond and a collection of\ncandidate bonds.\n<p>Attributes\n<p><code>bond</code> …\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gem &#39;rspec&#39; gem &#39;rdoc&#39;\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  diff-lcs (1.2.5)\n  json (1.8.3)\n  rdoc (4.2.2)\n    json (~&gt; ...</pre>\n"],["README","","README_md.html","","<p>Instructions\n<p>Install Bundler using <code>gem install bundler</code>\n<p>Go to the scripts root directory and run <code>bundle</code> …\n"],["challenge1_sample.csv","","challenge1_sample_csv.html","","<p>bond,type,term,yield C1,corporate,10.3 years,5.30% G1,government,9.4\nyears,3.70% G2,government,12 years,4.80% …\n"],["challenge2_sample.csv","","challenge2_sample_csv.html","","<p>bond,type,term,yield C1,corporate,10.3 years,5.30% C2,corporate,15.2\nyears,8.30% G1,government,9.4 years,3.70% …\n"],["sample_input.csv","","sample_input_csv.html","","<p>bond,type,term,yield C1,corporate,1.3 years,3.30% C2,corporate,2.0\nyears,3.80% C3,corporate,5.2 years,5.30% …\n"],["spread_to_benchmark.csv","","spread_to_benchmark_csv.html","","<p>bond,benchmark,spread_to_benchmark C1,G1,1.60% C2,G3,2.80%\n"],["spread_to_curve.csv","","spread_to_curve_csv.html","","<p>bond,spread_to_curve C1,1.22% C2,2.98%\n"]]}}